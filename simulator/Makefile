#############################################################################
# Makefile for building: simulator
# Generated by qmake (3.0) (Qt 5.7.0)
# Project:  simulator.pro
# Template: app
# Command: /usr/bin/qmake -o Makefile simulator.pro
#############################################################################

MAKEFILE      = Makefile

####### Compiler, tools and options

CC            = gcc
CXX           = g++
DEFINES       = 
CFLAGS        = -pipe -O2 -march=x86-64 -mtune=generic -O2 -pipe -Wall -W -fPIC $(DEFINES)
CXXFLAGS      = -pipe -O2 -march=x86-64 -mtune=generic -O2 -pipe -std=gnu++11 -Wall -W -fPIC $(DEFINES)
INCPATH       = 
QMAKE         = /usr/bin/qmake
DEL_FILE      = rm -f
CHK_DIR_EXISTS= test -d
MKDIR         = mkdir -p
COPY          = cp -f
COPY_FILE     = cp -f
COPY_DIR      = cp -f -R
INSTALL_FILE  = install -m 644 -p
INSTALL_PROGRAM = install -m 755 -p
INSTALL_DIR   = cp -f -R
DEL_FILE      = rm -f
SYMLINK       = ln -f -s
DEL_DIR       = rmdir
MOVE          = mv -f
TAR           = tar -cf
COMPRESS      = gzip -9f
LINK          = g++
LFLAGS        = -Wl,-O1 -Wl,-O1,--sort-common,--as-needed,-z,relro
LIBS          = 
AR            = ar cqs
RANLIB        = 
SED           = sed
STRIP         = strip

####### Output directory

OBJECTS_DIR   = ./

####### Files

SOURCES       = main.cpp \
		task.cpp \
		future_event_chain.cpp \
		least_common_multiple.cpp \
		simulator_abstract.cpp \
		simulator_global.cpp \
		processor.cpp \
		task_reader.cpp \
		simulation_result.cpp \
		simulator_partitioned.cpp \
		best_fit_packer.cpp \
		minimum_determiner.cpp 
OBJECTS       = main.o \
		task.o \
		future_event_chain.o \
		least_common_multiple.o \
		simulator_abstract.o \
		simulator_global.o \
		processor.o \
		task_reader.o \
		simulation_result.o \
		simulator_partitioned.o \
		best_fit_packer.o \
		minimum_determiner.o
QMAKE_TARGET  = simulator
DESTDIR       = 
TARGET        = simulator


first: all
####### Build rules

$(TARGET):  $(OBJECTS)  
	$(LINK) $(LFLAGS) -o $(TARGET) $(OBJECTS) $(OBJCOMP) $(LIBS)

all: Makefile $(TARGET)

clean: compiler_clean 
	-$(DEL_FILE) $(OBJECTS)
	-$(DEL_FILE) *~ core *.core

####### Sub-libraries

check: first

benchmark: first

compiler_yacc_decl_make_all:
compiler_yacc_decl_clean:
compiler_yacc_impl_make_all:
compiler_yacc_impl_clean:
compiler_lex_make_all:
compiler_lex_clean:
compiler_clean: 

####### Compile

main.o: main.cpp simulator_abstract.h \
		task.h \
		least_common_multiple.h \
		processor.h \
		simulation_result.h \
		future_event_chain.h \
		simulator_global.h \
		simulator_partitioned.h \
		best_fit_packer.h \
		task_reader.h \
		minimum_determiner.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o main.o main.cpp

task.o: task.cpp task.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o task.o task.cpp

future_event_chain.o: future_event_chain.cpp future_event_chain.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o future_event_chain.o future_event_chain.cpp

least_common_multiple.o: least_common_multiple.cpp least_common_multiple.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o least_common_multiple.o least_common_multiple.cpp

simulator_abstract.o: simulator_abstract.cpp simulator_abstract.h \
		task.h \
		least_common_multiple.h \
		processor.h \
		simulation_result.h \
		future_event_chain.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o simulator_abstract.o simulator_abstract.cpp

simulator_global.o: simulator_global.cpp simulator_global.h \
		simulator_abstract.h \
		task.h \
		least_common_multiple.h \
		processor.h \
		simulation_result.h \
		future_event_chain.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o simulator_global.o simulator_global.cpp

processor.o: processor.cpp processor.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o processor.o processor.cpp

task_reader.o: task_reader.cpp task_reader.h \
		task.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o task_reader.o task_reader.cpp

simulation_result.o: simulation_result.cpp simulation_result.h \
		processor.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o simulation_result.o simulation_result.cpp

simulator_partitioned.o: simulator_partitioned.cpp simulator_partitioned.h \
		simulator_abstract.h \
		task.h \
		least_common_multiple.h \
		processor.h \
		simulation_result.h \
		future_event_chain.h \
		best_fit_packer.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o simulator_partitioned.o simulator_partitioned.cpp

best_fit_packer.o: best_fit_packer.cpp best_fit_packer.h \
		task.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o best_fit_packer.o best_fit_packer.cpp

minimum_determiner.o: minimum_determiner.cpp minimum_determiner.h \
		simulator_abstract.h \
		task.h \
		least_common_multiple.h \
		processor.h \
		simulation_result.h \
		future_event_chain.h \
		simulator_global.h \
		simulator_partitioned.h \
		best_fit_packer.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o minimum_determiner.o minimum_determiner.cpp

####### Install

install:  FORCE

uninstall:  FORCE

FORCE:

